#include <AFMotor.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Servo.h> 
Servo myservo; 
int pos = 0;
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define trigPin 2
#define echoPin 3

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// C'est notre photo qui s'affiche sur l'écran:

const unsigned char krose [] PROGMEM = {

0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x38, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x20, 0x1f, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0xfd, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x03, 0xff, 0x81, 0xff, 0xff, 0xff, 0x80, 0x00, 0x03, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x78, 0x01, 0xff, 0xff, 0xff, 0x00, 0xff, 0x81, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x10, 0x01, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x10, 0x01, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x7f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x10, 0x00, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xc0, 0x3f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x3b, 0xf0, 0xff, 0xff, 0xf8, 0x1f, 0xfe, 0x20, 0x3f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x0f, 0x3b, 0xf1, 0xff, 0xff, 0xf8, 0x1f, 0xf1, 0xe0, 0x1f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x1f, 0x31, 0xf0, 0xff, 0xff, 0xf0, 0x00, 0xf8, 0x20, 0x1f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x18, 0xf8, 0xf0, 0x0f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x80, 0x10, 0x03, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xfc, 0x07, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x1c, 0xff, 0xfc, 0x07, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xe1, 0x01, 0x03, 0xff, 0xff, 0xf0, 0x1c, 0x6f, 0xfe, 0x02, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xe1, 0x87, 0x03, 0xff, 0xff, 0xe0, 0x3c, 0x3f, 0xff, 0x00, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x03, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0x01, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xe0, 0x7c, 0x07, 0xff, 0xff, 0xc0, 0x7f, 0x01, 0xff, 0x00, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0x80, 0x1c, 0xff, 0xff, 0x03, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x63, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0x01, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x41, 0xff, 0xff, 0xa0, 0x2f, 0xff, 0xfe, 0x0f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf9, 0xfb, 0xe1, 0xff, 0xff, 0x80, 0x17, 0xff, 0xfe, 0x03, 0xff, 0xff,
0xff, 0xff, 0xef, 0xbf, 0xfe, 0xfe, 0xc3, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0x03, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xdf, 0x03, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x7f, 0x07, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x01, 0xff, 0x1f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x0f, 0xff, 0x8f, 0xff, 0xff,
0xff, 0x7f, 0xdf, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xc3, 0xff, 0xff,
0xff, 0xf7, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xdf, 0xff, 0xf1, 0xff, 0xff,
0xfb, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xef, 0xff, 0xf3, 0x0f, 0xff,
0x00, 0x1e, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x04, 0xff, 0xff, 0xf3, 0x18, 0x1f,
0x00, 0x0d, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x04, 0x7f, 0xff, 0xf2, 0x30, 0x01,
0x00, 0x03, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x06, 0x7f, 0xff, 0xf3, 0x30, 0x00,
0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x03, 0x7f, 0xff, 0xe1, 0x70, 0x00,
0x00, 0x00, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x81, 0x7f, 0xff, 0xe0, 0xe4, 0x00,
0xc0, 0x00, 0xc7, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xe2, 0x00, 0x3f, 0xff, 0xee, 0x00, 0x31,
0xc0, 0x00, 0x07, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0x10, 0x00, 0x07, 0xff, 0xd5, 0xf1, 0xf1,
0xe0, 0x00, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0x94, 0x00, 0xff, 0xbe, 0xe3, 0xcf,
0x80, 0x01, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xe5, 0x2a, 0x70, 0x7f, 0x7f, 0xc3, 0xbf,
0x00, 0x07, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdf, 0x4c, 0x50, 0x3e, 0xfe, 0x4f, 0xfc,
0x00, 0x1f, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0x16, 0xff, 0x18, 0x0c, 0xf8, 0x5f, 0xfe,
0x00, 0x7f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf0, 0xed, 0x48, 0xe9, 0xf8, 0x55, 0xcf,
0x03, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x5f, 0x0f, 0xf4, 0xe1, 0xc3, 0x9c, 0x83,
0x0f, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x37, 0xf0, 0x62, 0x00, 0x04, 0x23, 0xf0,
0x7f, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x0f, 0xde, 0x0c, 0x03, 0xc2, 0x9a, 0xee,
0xff, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x35, 0x82, 0x01, 0xbd, 0x62, 0xff,
0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x06, 0x10, 0x1f, 0x63, 0x47, 0x0f,
0xff, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x25, 0x80, 0x91, 0x24, 0x40, 0x0a,
0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x44, 0x00
};


void ssetup() 
{ 
display.begin(SSD1306_SWITCHCAPVCC, 0x3C); 
myservo.attach(10); 
}

void Lloop() {
display.clearDisplay();
display.drawBitmap(0, 0, krose , 128,64,1);
display.display();
delay(5000);
display.clearDisplay();
}

char command;
void Ssetup() {
myservo.attach(10); // On a inseré dans SER1
Serial.begin(9600);
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);
display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
display.clearDisplay(); 
}
AF_DCMotor motor1(1); 
AF_DCMotor motor3(3); 

char Ccommand;

void setup() {

Serial.begin(9600);
myservo.attach(10);
}

void loop() {
if(Serial.available()>0)
{
command = Serial.read();
delay(2);

switch(command)
{
case 'F':
forward();
break;
case'B':
backward();
break;
case 'L':
left();
break;
case 'R':
right();
break;
case 'G':
forwardleft();
break;
case 'I':
forwardright();
break;
case 'H':
backwardleft();
break;
case 'J':
backwardright();
break;
case 'S':
Stop();
break;
case 'V':
hornon();
break;
case 'U':
backlightson();
break;
}
}
}

void forward()
{
motor1.setSpeed(255);
motor1.run(FORWARD);
motor3.setSpeed(255);
motor3.run(FORWARD);
}

void backward()
{
motor1.setSpeed(255);
motor1.run(BACKWARD);
motor3.setSpeed(255);
motor3.run(BACKWARD);
}

void left()
{
motor1.setSpeed(255);
motor1.run(FORWARD);
motor3.setSpeed(255);
motor3.run(BACKWARD);
}

void right()
{
motor1.setSpeed(255);
motor1.run(BACKWARD);
motor3.setSpeed(255);
motor3.run(FORWARD);
}

void forwardleft()
{
motor1.setSpeed(250);
motor1.run(FORWARD);
motor3.setSpeed(10);
motor3.run(FORWARD);
}

void forwardright()
{
motor1.setSpeed(10);
motor1.run(FORWARD);
motor3.setSpeed(255);
motor3.run(FORWARD);
}

void backwardleft()
{
motor1.setSpeed(10);
motor1.run(BACKWARD);
motor3.setSpeed(255);
motor3.run(BACKWARD);
}

void backwardright()
{
motor1.setSpeed(255);
motor1.run(BACKWARD);
motor3.setSpeed(10);
motor3.run(BACKWARD);
}

void Stop()
{
motor1.setSpeed(0); 
motor1.run(RELEASE); 
motor3.setSpeed(0); 
motor3.run(RELEASE);
}

// Les Fonctions du servo:

void hornon(){ // c'est le Horn ON (Claxon) pour activer le servo en ce mode
for(pos = 0; pos < 180; pos += 1) 
{ 
myservo.write(pos); 
delay(15); 
}
for(pos = 180; pos>=1; pos-=1) 
{ 
myservo.write(pos); 
delay(15); 
}
}

void backlightson(){  // c'est le Backlights ON, on a choisit cette touche pour changer le mode de l'hélice
for(pos = 0; pos < 0; pos += 1) 
{ 
myservo.write(pos); 
delay(0); 
}
for(pos = 0; pos>=0; pos-=1) 
{ 
myservo.write(pos); 
delay(0); 
}
}

